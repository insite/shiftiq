using System;

using InSite.Application.Contents.Read;
using InSite.Domain.Banks;

namespace InSite.Application.Banks.Read
{
    public interface IBankStore
    {
        void DeleteAll();
        void Delete(Guid bank);

        void Insert(BankOpened e);

        void Update(QBankQuestion entity);
        void Update(QComment entity);

        void Update(AssessmentHookChanged e);
        void Update(AttachmentAdded e);
        void Update(AttachmentAddedToQuestion e);
        void Update(AttachmentChanged e);
        void Update(AttachmentImageChanged e);
        void Update(BankAttachmentDeleted e);
        void Update(AttachmentDeletedFromQuestion e);
        void Update(AttachmentUpgraded e);
        void Update(BankAnalyzed e);
        void Update(BankContentChanged e);
        void Update(BankLevelChanged e);
        void Update(BankLocked e);
        void Update(FormMessageConnected e);
        void Update(BankRenamed e);
        void Update(BankStandardChanged e);
        void Update(BankTypeChanged e);
        void Update(BankUnlocked e);
        void Update(BankEditionChanged e);
        void Update(BankStatusChanged e);
        void Update(CommentAuthorRoleChanged e);
        void Update(CommentDuplicated e);
        void Update(CommentMoved e);
        void Update(BankCommentPosted e);
        void Update(CommentRejected e);
        void Update(CommentRetracted e);
        void Update(BankCommentModified e);
        void Update(CommentVisibilityChanged e);
        void Update(CriterionAdded e);
        void Update(CriterionFilterChanged e);
        void Update(CriterionFilterDeleted e);
        void Update(CriterionDeleted e);
        void Update(FieldAdded e);
        void Update(FieldDeleted e);
        void Update(FieldsDeleted e);
        void Update(FieldsReordered e);
        void Update(FieldsSwapped e);
        void Update(FormAdded e);
        void Update(FormAddendumChanged e);
        void Update(FormAnalyzed e);
        void Update(FormArchived e);
        void Update(FormAssetChanged e);
        void Update(FormClassificationChanged e);
        void Update(FormCodeChanged e);
        void Update(FormContentChanged e);
        void Update(FormGradebookChanged e);
        void Update(FormInvigilationChanged e);
        void Update(FormLanguagesModified e);
        void Update(FormNameChanged e);
        void Update(FormPublished e);
        void Update(FormDeleted e);
        void Update(FormUnarchived e);
        void Update(FormUnpublished e);
        void Update(FormUpgraded e);
        void Update(FormVersionChanged e);
        void Update(OptionAdded e);
        void Update(OptionChanged e);
        void Update(OptionDeleted e);
        void Update(OptionsReordered e);
        void Update(QuestionAdded e);
        void Update(QuestionClassificationChanged e);
        void Update(QuestionComposedVoiceChanged e);
        void Update(QuestionConditionChanged e);
        void Update(QuestionContentChanged e);
        void Update(QuestionDuplicated2 e);
        void Update(QuestionFlagChanged e);
        void Update(QuestionHotspotImageChanged e);
        void Update(QuestionHotspotOptionAdded e);
        void Update(QuestionHotspotOptionChanged e);
        void Update(QuestionHotspotOptionDeleted e);
        void Update(QuestionHotspotOptionsReordered e);
        void Update(QuestionHotspotPinLimitChanged e);
        void Update(QuestionHotspotShowShapesChanged e);
        void Update(QuestionLayoutChanged e);
        void Update(QuestionLikertColumnAdded e);
        void Update(QuestionLikertColumnChanged e);
        void Update(QuestionLikertColumnDeleted e);
        void Update(QuestionLikertOptionsChanged e);
        void Update(QuestionLikertReordered e);
        void Update(QuestionLikertRowAdded e);
        void Update(QuestionLikertRowChanged e);
        void Update(QuestionLikertRowDeleted e);
        void Update(QuestionMatchesChanged e);
        void Update(QuestionMoved e);
        void Update(QuestionMovedIn e);
        void Update(QuestionMovedOut e);
        void Update(QuestionOrderingOptionAdded e);
        void Update(QuestionOrderingSolutionAdded e);
        void Update(QuestionOrderingLabelChanged e);
        void Update(QuestionOrderingOptionChanged e);
        void Update(QuestionOrderingSolutionChanged e);
        void Update(QuestionOrderingOptionDeleted e);
        void Update(QuestionOrderingSolutionDeleted e);
        void Update(QuestionOrderingOptionsReordered e);
        void Update(QuestionOrderingSolutionsReordered e);
        void Update(QuestionOrderingSolutionOptionsReordered e);
        void Update(QuestionPublicationStatusChanged e);
        void Update(QuestionRandomizationChanged e);
        void Update(QuestionRubricConnected e);
        void Update(QuestionRubricDisconnected e);
        void Update(QuestionDeleted e);
        void Update(QuestionGradeItemChanged2 e);
        void Update(QuestionLikertRowGradeItemChanged e);
        void Update(QuestionScoringChanged e);
        void Update(QuestionSetChanged e);
        void Update(QuestionStandardChanged e);
        void Update(QuestionUpgraded e);
        void Update(QuestionsReordered e);
        void Update(SectionAdded e);
        void Update(SectionContentChanged e);
        void Update(SectionDeleted e);
        void Update(SectionReconfigured e);
        void Update(SectionsReordered e);
        void Update(ThirdPartyAssessmentEnabled entity);
        void Update(ThirdPartyAssessmentDisabled entity);
        void Update(SetAdded e);
        void Update(SetImported e);
        void Update(SetRandomizationChanged e);
        void Update(SetDeleted e);
        void Update(SetRenamed e);
        void Update(SetStandardChanged e);
        void Update(SetsMerged e);
        void Update(SetsReordered e);
        void Update(SpecificationAdded e);
        void Update(SpecificationCalculationChanged e);
        void Update(SpecificationContentChanged e);
        void Update(SpecificationTabTimeLimitChanged e);
        void Update(SpecificationReconfigured e);
        void Update(SpecificationDeleted e);
        void Update(SpecificationRenamed e);
        void Update(SpecificationRetyped e);
        void Update(SectionsAsTabsDisabled e);
        void Update(SectionsAsTabsEnabled e);
        void Update(TabNavigationEnabled e);
        void Update(TabNavigationDisabled e);
        void Update(SingleQuestionPerTabEnabled e);
        void Update(SingleQuestionPerTabDisabled e);
    }
}
